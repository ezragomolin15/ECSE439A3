/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.conferenceProgram.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.conferenceProgram.ConferenceProgramPackage;
import org.xtext.example.mydsl.conferenceProgram.DemoAndPoster;
import org.xtext.example.mydsl.conferenceProgram.IndustryPaper;
import org.xtext.example.mydsl.conferenceProgram.Location;
import org.xtext.example.mydsl.conferenceProgram.Panel;
import org.xtext.example.mydsl.conferenceProgram.ResearchPaper;
import org.xtext.example.mydsl.conferenceProgram.Session;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Session</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getResearchpaper <em>Researchpaper</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getIndustrypaper <em>Industrypaper</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getDemoandposter <em>Demoandposter</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getPanel <em>Panel</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getStartTime <em>Start Time</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.SessionImpl#getEndTime <em>End Time</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SessionImpl extends MinimalEObjectImpl.Container implements Session
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getResearchpaper() <em>Researchpaper</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResearchpaper()
   * @generated
   * @ordered
   */
  protected EList<ResearchPaper> researchpaper;

  /**
   * The cached value of the '{@link #getIndustrypaper() <em>Industrypaper</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndustrypaper()
   * @generated
   * @ordered
   */
  protected EList<IndustryPaper> industrypaper;

  /**
   * The cached value of the '{@link #getDemoandposter() <em>Demoandposter</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDemoandposter()
   * @generated
   * @ordered
   */
  protected EList<DemoAndPoster> demoandposter;

  /**
   * The cached value of the '{@link #getPanel() <em>Panel</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPanel()
   * @generated
   * @ordered
   */
  protected EList<Panel> panel;

  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected Location location;

  /**
   * The default value of the '{@link #getStartTime() <em>Start Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartTime()
   * @generated
   * @ordered
   */
  protected static final String START_TIME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getStartTime() <em>Start Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStartTime()
   * @generated
   * @ordered
   */
  protected String startTime = START_TIME_EDEFAULT;

  /**
   * The default value of the '{@link #getEndTime() <em>End Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndTime()
   * @generated
   * @ordered
   */
  protected static final String END_TIME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEndTime() <em>End Time</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndTime()
   * @generated
   * @ordered
   */
  protected String endTime = END_TIME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SessionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ConferenceProgramPackage.Literals.SESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.SESSION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ResearchPaper> getResearchpaper()
  {
    if (researchpaper == null)
    {
      researchpaper = new EObjectContainmentEList<ResearchPaper>(ResearchPaper.class, this, ConferenceProgramPackage.SESSION__RESEARCHPAPER);
    }
    return researchpaper;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IndustryPaper> getIndustrypaper()
  {
    if (industrypaper == null)
    {
      industrypaper = new EObjectContainmentEList<IndustryPaper>(IndustryPaper.class, this, ConferenceProgramPackage.SESSION__INDUSTRYPAPER);
    }
    return industrypaper;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DemoAndPoster> getDemoandposter()
  {
    if (demoandposter == null)
    {
      demoandposter = new EObjectContainmentEList<DemoAndPoster>(DemoAndPoster.class, this, ConferenceProgramPackage.SESSION__DEMOANDPOSTER);
    }
    return demoandposter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Panel> getPanel()
  {
    if (panel == null)
    {
      panel = new EObjectContainmentEList<Panel>(Panel.class, this, ConferenceProgramPackage.SESSION__PANEL);
    }
    return panel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Location getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLocation(Location newLocation, NotificationChain msgs)
  {
    Location oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.SESSION__LOCATION, oldLocation, newLocation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(Location newLocation)
  {
    if (newLocation != location)
    {
      NotificationChain msgs = null;
      if (location != null)
        msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConferenceProgramPackage.SESSION__LOCATION, null, msgs);
      if (newLocation != null)
        msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConferenceProgramPackage.SESSION__LOCATION, null, msgs);
      msgs = basicSetLocation(newLocation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.SESSION__LOCATION, newLocation, newLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getStartTime()
  {
    return startTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStartTime(String newStartTime)
  {
    String oldStartTime = startTime;
    startTime = newStartTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.SESSION__START_TIME, oldStartTime, startTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEndTime()
  {
    return endTime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndTime(String newEndTime)
  {
    String oldEndTime = endTime;
    endTime = newEndTime;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.SESSION__END_TIME, oldEndTime, endTime));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.SESSION__RESEARCHPAPER:
        return ((InternalEList<?>)getResearchpaper()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.SESSION__INDUSTRYPAPER:
        return ((InternalEList<?>)getIndustrypaper()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.SESSION__DEMOANDPOSTER:
        return ((InternalEList<?>)getDemoandposter()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.SESSION__PANEL:
        return ((InternalEList<?>)getPanel()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.SESSION__LOCATION:
        return basicSetLocation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.SESSION__NAME:
        return getName();
      case ConferenceProgramPackage.SESSION__RESEARCHPAPER:
        return getResearchpaper();
      case ConferenceProgramPackage.SESSION__INDUSTRYPAPER:
        return getIndustrypaper();
      case ConferenceProgramPackage.SESSION__DEMOANDPOSTER:
        return getDemoandposter();
      case ConferenceProgramPackage.SESSION__PANEL:
        return getPanel();
      case ConferenceProgramPackage.SESSION__LOCATION:
        return getLocation();
      case ConferenceProgramPackage.SESSION__START_TIME:
        return getStartTime();
      case ConferenceProgramPackage.SESSION__END_TIME:
        return getEndTime();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.SESSION__NAME:
        setName((String)newValue);
        return;
      case ConferenceProgramPackage.SESSION__RESEARCHPAPER:
        getResearchpaper().clear();
        getResearchpaper().addAll((Collection<? extends ResearchPaper>)newValue);
        return;
      case ConferenceProgramPackage.SESSION__INDUSTRYPAPER:
        getIndustrypaper().clear();
        getIndustrypaper().addAll((Collection<? extends IndustryPaper>)newValue);
        return;
      case ConferenceProgramPackage.SESSION__DEMOANDPOSTER:
        getDemoandposter().clear();
        getDemoandposter().addAll((Collection<? extends DemoAndPoster>)newValue);
        return;
      case ConferenceProgramPackage.SESSION__PANEL:
        getPanel().clear();
        getPanel().addAll((Collection<? extends Panel>)newValue);
        return;
      case ConferenceProgramPackage.SESSION__LOCATION:
        setLocation((Location)newValue);
        return;
      case ConferenceProgramPackage.SESSION__START_TIME:
        setStartTime((String)newValue);
        return;
      case ConferenceProgramPackage.SESSION__END_TIME:
        setEndTime((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.SESSION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ConferenceProgramPackage.SESSION__RESEARCHPAPER:
        getResearchpaper().clear();
        return;
      case ConferenceProgramPackage.SESSION__INDUSTRYPAPER:
        getIndustrypaper().clear();
        return;
      case ConferenceProgramPackage.SESSION__DEMOANDPOSTER:
        getDemoandposter().clear();
        return;
      case ConferenceProgramPackage.SESSION__PANEL:
        getPanel().clear();
        return;
      case ConferenceProgramPackage.SESSION__LOCATION:
        setLocation((Location)null);
        return;
      case ConferenceProgramPackage.SESSION__START_TIME:
        setStartTime(START_TIME_EDEFAULT);
        return;
      case ConferenceProgramPackage.SESSION__END_TIME:
        setEndTime(END_TIME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.SESSION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ConferenceProgramPackage.SESSION__RESEARCHPAPER:
        return researchpaper != null && !researchpaper.isEmpty();
      case ConferenceProgramPackage.SESSION__INDUSTRYPAPER:
        return industrypaper != null && !industrypaper.isEmpty();
      case ConferenceProgramPackage.SESSION__DEMOANDPOSTER:
        return demoandposter != null && !demoandposter.isEmpty();
      case ConferenceProgramPackage.SESSION__PANEL:
        return panel != null && !panel.isEmpty();
      case ConferenceProgramPackage.SESSION__LOCATION:
        return location != null;
      case ConferenceProgramPackage.SESSION__START_TIME:
        return START_TIME_EDEFAULT == null ? startTime != null : !START_TIME_EDEFAULT.equals(startTime);
      case ConferenceProgramPackage.SESSION__END_TIME:
        return END_TIME_EDEFAULT == null ? endTime != null : !END_TIME_EDEFAULT.equals(endTime);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", startTime: ");
    result.append(startTime);
    result.append(", endTime: ");
    result.append(endTime);
    result.append(')');
    return result.toString();
  }

} //SessionImpl
