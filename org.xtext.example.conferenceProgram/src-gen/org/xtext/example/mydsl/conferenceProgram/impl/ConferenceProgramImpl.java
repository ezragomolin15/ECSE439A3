/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.conferenceProgram.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.conferenceProgram.CoffeBreak;
import org.xtext.example.mydsl.conferenceProgram.ConferenceProgram;
import org.xtext.example.mydsl.conferenceProgram.ConferenceProgramPackage;
import org.xtext.example.mydsl.conferenceProgram.DemosAndPosterTrack;
import org.xtext.example.mydsl.conferenceProgram.IndustryTrack;
import org.xtext.example.mydsl.conferenceProgram.Keynote;
import org.xtext.example.mydsl.conferenceProgram.Lunch;
import org.xtext.example.mydsl.conferenceProgram.PanelTrack;
import org.xtext.example.mydsl.conferenceProgram.ResearchTrack;
import org.xtext.example.mydsl.conferenceProgram.SocialEvent;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Conference Program</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getDate <em>Date</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getResearchtracks <em>Researchtracks</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getIndustrytracks <em>Industrytracks</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getDemosandposterstrack <em>Demosandposterstrack</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getPanelstrack <em>Panelstrack</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getSocialEvents <em>Social Events</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getKeynotes <em>Keynotes</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getCoffebreaks <em>Coffebreaks</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.conferenceProgram.impl.ConferenceProgramImpl#getLunches <em>Lunches</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConferenceProgramImpl extends MinimalEObjectImpl.Container implements ConferenceProgram
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDate() <em>Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected static final String DATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDate() <em>Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected String date = DATE_EDEFAULT;

  /**
   * The cached value of the '{@link #getResearchtracks() <em>Researchtracks</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResearchtracks()
   * @generated
   * @ordered
   */
  protected ResearchTrack researchtracks;

  /**
   * The cached value of the '{@link #getIndustrytracks() <em>Industrytracks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIndustrytracks()
   * @generated
   * @ordered
   */
  protected EList<IndustryTrack> industrytracks;

  /**
   * The cached value of the '{@link #getDemosandposterstrack() <em>Demosandposterstrack</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDemosandposterstrack()
   * @generated
   * @ordered
   */
  protected EList<DemosAndPosterTrack> demosandposterstrack;

  /**
   * The cached value of the '{@link #getPanelstrack() <em>Panelstrack</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPanelstrack()
   * @generated
   * @ordered
   */
  protected EList<PanelTrack> panelstrack;

  /**
   * The cached value of the '{@link #getSocialEvents() <em>Social Events</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSocialEvents()
   * @generated
   * @ordered
   */
  protected EList<SocialEvent> socialEvents;

  /**
   * The cached value of the '{@link #getKeynotes() <em>Keynotes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeynotes()
   * @generated
   * @ordered
   */
  protected EList<Keynote> keynotes;

  /**
   * The cached value of the '{@link #getCoffebreaks() <em>Coffebreaks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCoffebreaks()
   * @generated
   * @ordered
   */
  protected EList<CoffeBreak> coffebreaks;

  /**
   * The cached value of the '{@link #getLunches() <em>Lunches</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLunches()
   * @generated
   * @ordered
   */
  protected EList<Lunch> lunches;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConferenceProgramImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ConferenceProgramPackage.Literals.CONFERENCE_PROGRAM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.CONFERENCE_PROGRAM__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDate()
  {
    return date;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDate(String newDate)
  {
    String oldDate = date;
    date = newDate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.CONFERENCE_PROGRAM__DATE, oldDate, date));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ResearchTrack getResearchtracks()
  {
    return researchtracks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetResearchtracks(ResearchTrack newResearchtracks, NotificationChain msgs)
  {
    ResearchTrack oldResearchtracks = researchtracks;
    researchtracks = newResearchtracks;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS, oldResearchtracks, newResearchtracks);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResearchtracks(ResearchTrack newResearchtracks)
  {
    if (newResearchtracks != researchtracks)
    {
      NotificationChain msgs = null;
      if (researchtracks != null)
        msgs = ((InternalEObject)researchtracks).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS, null, msgs);
      if (newResearchtracks != null)
        msgs = ((InternalEObject)newResearchtracks).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS, null, msgs);
      msgs = basicSetResearchtracks(newResearchtracks, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS, newResearchtracks, newResearchtracks));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IndustryTrack> getIndustrytracks()
  {
    if (industrytracks == null)
    {
      industrytracks = new EObjectContainmentEList<IndustryTrack>(IndustryTrack.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS);
    }
    return industrytracks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DemosAndPosterTrack> getDemosandposterstrack()
  {
    if (demosandposterstrack == null)
    {
      demosandposterstrack = new EObjectContainmentEList<DemosAndPosterTrack>(DemosAndPosterTrack.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK);
    }
    return demosandposterstrack;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PanelTrack> getPanelstrack()
  {
    if (panelstrack == null)
    {
      panelstrack = new EObjectContainmentEList<PanelTrack>(PanelTrack.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK);
    }
    return panelstrack;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SocialEvent> getSocialEvents()
  {
    if (socialEvents == null)
    {
      socialEvents = new EObjectContainmentEList<SocialEvent>(SocialEvent.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS);
    }
    return socialEvents;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Keynote> getKeynotes()
  {
    if (keynotes == null)
    {
      keynotes = new EObjectContainmentEList<Keynote>(Keynote.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES);
    }
    return keynotes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<CoffeBreak> getCoffebreaks()
  {
    if (coffebreaks == null)
    {
      coffebreaks = new EObjectContainmentEList<CoffeBreak>(CoffeBreak.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS);
    }
    return coffebreaks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Lunch> getLunches()
  {
    if (lunches == null)
    {
      lunches = new EObjectContainmentEList<Lunch>(Lunch.class, this, ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES);
    }
    return lunches;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS:
        return basicSetResearchtracks(null, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS:
        return ((InternalEList<?>)getIndustrytracks()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK:
        return ((InternalEList<?>)getDemosandposterstrack()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK:
        return ((InternalEList<?>)getPanelstrack()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS:
        return ((InternalEList<?>)getSocialEvents()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES:
        return ((InternalEList<?>)getKeynotes()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS:
        return ((InternalEList<?>)getCoffebreaks()).basicRemove(otherEnd, msgs);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES:
        return ((InternalEList<?>)getLunches()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__NAME:
        return getName();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DATE:
        return getDate();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS:
        return getResearchtracks();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS:
        return getIndustrytracks();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK:
        return getDemosandposterstrack();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK:
        return getPanelstrack();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS:
        return getSocialEvents();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES:
        return getKeynotes();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS:
        return getCoffebreaks();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES:
        return getLunches();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__NAME:
        setName((String)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DATE:
        setDate((String)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS:
        setResearchtracks((ResearchTrack)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS:
        getIndustrytracks().clear();
        getIndustrytracks().addAll((Collection<? extends IndustryTrack>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK:
        getDemosandposterstrack().clear();
        getDemosandposterstrack().addAll((Collection<? extends DemosAndPosterTrack>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK:
        getPanelstrack().clear();
        getPanelstrack().addAll((Collection<? extends PanelTrack>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS:
        getSocialEvents().clear();
        getSocialEvents().addAll((Collection<? extends SocialEvent>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES:
        getKeynotes().clear();
        getKeynotes().addAll((Collection<? extends Keynote>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS:
        getCoffebreaks().clear();
        getCoffebreaks().addAll((Collection<? extends CoffeBreak>)newValue);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES:
        getLunches().clear();
        getLunches().addAll((Collection<? extends Lunch>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__NAME:
        setName(NAME_EDEFAULT);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DATE:
        setDate(DATE_EDEFAULT);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS:
        setResearchtracks((ResearchTrack)null);
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS:
        getIndustrytracks().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK:
        getDemosandposterstrack().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK:
        getPanelstrack().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS:
        getSocialEvents().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES:
        getKeynotes().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS:
        getCoffebreaks().clear();
        return;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES:
        getLunches().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DATE:
        return DATE_EDEFAULT == null ? date != null : !DATE_EDEFAULT.equals(date);
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__RESEARCHTRACKS:
        return researchtracks != null;
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__INDUSTRYTRACKS:
        return industrytracks != null && !industrytracks.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__DEMOSANDPOSTERSTRACK:
        return demosandposterstrack != null && !demosandposterstrack.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__PANELSTRACK:
        return panelstrack != null && !panelstrack.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__SOCIAL_EVENTS:
        return socialEvents != null && !socialEvents.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__KEYNOTES:
        return keynotes != null && !keynotes.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__COFFEBREAKS:
        return coffebreaks != null && !coffebreaks.isEmpty();
      case ConferenceProgramPackage.CONFERENCE_PROGRAM__LUNCHES:
        return lunches != null && !lunches.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", date: ");
    result.append(date);
    result.append(')');
    return result.toString();
  }

} //ConferenceProgramImpl
