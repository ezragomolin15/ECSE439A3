/**
 * generated by Xtext 2.30.0
 */
package org.xtext.example.mydsl.conferenceProgram.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.example.mydsl.conferenceProgram.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.conferenceProgram.ConferenceProgramPackage
 * @generated
 */
public class ConferenceProgramSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static ConferenceProgramPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConferenceProgramSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = ConferenceProgramPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case ConferenceProgramPackage.CONFERENCE_PROGRAM:
      {
        ConferenceProgram conferenceProgram = (ConferenceProgram)theEObject;
        T result = caseConferenceProgram(conferenceProgram);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.RESEARCH_TRACK:
      {
        ResearchTrack researchTrack = (ResearchTrack)theEObject;
        T result = caseResearchTrack(researchTrack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.INDUSTRY_TRACK:
      {
        IndustryTrack industryTrack = (IndustryTrack)theEObject;
        T result = caseIndustryTrack(industryTrack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.DEMOS_AND_POSTER_TRACK:
      {
        DemosAndPosterTrack demosAndPosterTrack = (DemosAndPosterTrack)theEObject;
        T result = caseDemosAndPosterTrack(demosAndPosterTrack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.PANEL_TRACK:
      {
        PanelTrack panelTrack = (PanelTrack)theEObject;
        T result = casePanelTrack(panelTrack);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.RESEARCH_SESSION:
      {
        ResearchSession researchSession = (ResearchSession)theEObject;
        T result = caseResearchSession(researchSession);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.INDUSTRY_SESSION:
      {
        IndustrySession industrySession = (IndustrySession)theEObject;
        T result = caseIndustrySession(industrySession);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.DEMO_SESSION:
      {
        DemoSession demoSession = (DemoSession)theEObject;
        T result = caseDemoSession(demoSession);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.PANEL_SESSION:
      {
        PanelSession panelSession = (PanelSession)theEObject;
        T result = casePanelSession(panelSession);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.RESEARCH_PAPER:
      {
        ResearchPaper researchPaper = (ResearchPaper)theEObject;
        T result = caseResearchPaper(researchPaper);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.INDUSTRY_PAPER:
      {
        IndustryPaper industryPaper = (IndustryPaper)theEObject;
        T result = caseIndustryPaper(industryPaper);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.DEMO_AND_POSTER:
      {
        DemoAndPoster demoAndPoster = (DemoAndPoster)theEObject;
        T result = caseDemoAndPoster(demoAndPoster);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.PANEL:
      {
        Panel panel = (Panel)theEObject;
        T result = casePanel(panel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.LOCATION:
      {
        Location location = (Location)theEObject;
        T result = caseLocation(location);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.ROOM:
      {
        Room room = (Room)theEObject;
        T result = caseRoom(room);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.KEYNOTE:
      {
        Keynote keynote = (Keynote)theEObject;
        T result = caseKeynote(keynote);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.COFFE_BREAK:
      {
        CoffeBreak coffeBreak = (CoffeBreak)theEObject;
        T result = caseCoffeBreak(coffeBreak);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.LUNCH:
      {
        Lunch lunch = (Lunch)theEObject;
        T result = caseLunch(lunch);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.SOCIAL_EVENT:
      {
        SocialEvent socialEvent = (SocialEvent)theEObject;
        T result = caseSocialEvent(socialEvent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case ConferenceProgramPackage.GOOGLE_MAPS_DIRECTIONS:
      {
        GoogleMapsDirections googleMapsDirections = (GoogleMapsDirections)theEObject;
        T result = caseGoogleMapsDirections(googleMapsDirections);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Conference Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Conference Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConferenceProgram(ConferenceProgram object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Research Track</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Research Track</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResearchTrack(ResearchTrack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Industry Track</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Industry Track</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIndustryTrack(IndustryTrack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Demos And Poster Track</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Demos And Poster Track</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDemosAndPosterTrack(DemosAndPosterTrack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Panel Track</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Panel Track</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePanelTrack(PanelTrack object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Research Session</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Research Session</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResearchSession(ResearchSession object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Industry Session</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Industry Session</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIndustrySession(IndustrySession object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Demo Session</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Demo Session</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDemoSession(DemoSession object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Panel Session</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Panel Session</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePanelSession(PanelSession object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Research Paper</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Research Paper</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResearchPaper(ResearchPaper object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Industry Paper</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Industry Paper</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIndustryPaper(IndustryPaper object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Demo And Poster</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Demo And Poster</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDemoAndPoster(DemoAndPoster object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Panel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Panel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casePanel(Panel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Location</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Location</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLocation(Location object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Room</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Room</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRoom(Room object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Keynote</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Keynote</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseKeynote(Keynote object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Coffe Break</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Coffe Break</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCoffeBreak(CoffeBreak object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Lunch</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Lunch</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLunch(Lunch object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Social Event</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Social Event</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSocialEvent(SocialEvent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Google Maps Directions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Google Maps Directions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGoogleMapsDirections(GoogleMapsDirections object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //ConferenceProgramSwitch
